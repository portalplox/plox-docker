version: "3"

networks:
  plx-network:
    driver: bridge

services:
  rabbitmq:
    build: ./images/rabbitmq/local
    restart: always
    environment:
      - RABBITMQ_USERNAME=docker
      - RABBITMQ_PASSWORD=docker
      - POSTGRES_PASSWORD=docker
    volumes:
      - ./volumes/rabbitmq-data:/bitnami
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - plx-network

  postgres:
    build: ./images/postgres/local
    restart: always
    environment:
      - POSTGRES_DB=
      - POSTGRES_USER=
      - POSTGRES_PASSWORD=docker
    volumes:
      - ./volumes/postgres-data:/var/lib/postgresql/data
      - ./shared:/shared
    ports:
      - "5432:5432"
    networks:
      - plx-network

  redis:
    build: ./images/redis/local
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - REDIS_PASSWORD=docker
    volumes:
      - ./volumes/redis-data:/bitnami/redis/data
    ports:
      - "6379:6379"
    networks:
      - plx-network

  platy-api:
    build: ./images/node/local
    restart: always
    command: npm run dev
    volumes:
      - ../platy-backend:/app
    ports:
      - "3333:3333"
    networks:
      - plx-network

  platy-app:
    build: ./images/node/local
    working_dir: /app
    restart: always
    command: npm run start
    volumes:
      - ../platy-frontend:/app
    ports:
      - "5000:5000"
    networks:
      - plx-network

  mongo:
    build: ./images/mongo/local
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - MONGODB_ROOT_PASSWORD=root
      - MONGODB_USERNAME=mongo
      - MONGODB_PASSWORD=docker
      - MONGODB_DATABASE=
    volumes:
      - ./volumes/mongo-data:/bitnami/mongodb/data
      - ./shared:/shared
    ports:
      - "27017:27017"
    networks:
      - plx-network

  plox-api:
    build: ./images/node/local
    restart: always
    command: npm run dev
    volumes:
      - ../site-backend:/app
    ports:
      - "3334:3333"
    networks:
      - plx-network

  plox-app:
    build: ./images/node/local
    restart: always
    command: npm run local
    volumes:
      - ../site-frontend:/app
    ports:
      - "4000:4000"
      - "4200:4200"
    networks:
      - plx-network

  worker-capa-web:
    build: ./images/nginx/local
    working_dir: /app
    volumes:
      - ./images/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ../worker-capa:/app
    ports:
      - "8001:80"
    networks:
      - plx-network

  worker-capa:
    build: images/php-fpm/local
    image: php7.4-debug
    restart: always
    working_dir: /app
    environment:
      XDEBUG_CONFIG: remote_host=172.17.0.1 remote_connect_back=1
    volumes:
      - ../worker-capa:/app
      - ./images/php-fpm/php-ini-overrides.ini:/opt/bitnami/php/etc/conf.d/99-overrides.ini
    networks:
      - plx-network
